# -*- coding: utf-8 -*-

import telebot
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup
import sqlite3
import requests

text = ''
type = ''
caption = ''
id = ''
conn = sqlite3.connect('database.db', check_same_thread=False)
cursor = conn.cursor()

admin = 'cryptobroker_x'

TOKEN = '6695923427:AAFzytGws8yftOwnyUI6DpUhqoyKWmzs'

KNOPKA1 = '–ö–Ω–æ–ø–∫–∞ 1'
KNOPKA2 = '–ö–Ω–æ–ø–∫–∞ 2'
KNOPKA3 = '–ö–Ω–æ–ø–∫–∞ 3'
KNOPKA4 = '–ö–Ω–æ–ø–∫–∞ 4'

TEXT1 = '–≠—Ç–æ –∫–Ω–æ–ø–∫–∞ –Ω–æ–º–µ—Ä 1 üòé'
TEXT2 = '–≠—Ç–æ –∫–Ω–æ–ø–∫–∞ –Ω–æ–º–µ—Ä 2 üòé'
TEXT3 = '–≠—Ç–æ –∫–Ω–æ–ø–∫–∞ –Ω–æ–º–µ—Ä 3 üòé'
TEXT4 = '–≠—Ç–æ –∫–Ω–æ–ø–∫–∞ –Ω–æ–º–µ—Ä 4 üòé'

bot = telebot.TeleBot(TOKEN)

###################### –°–û–û–ë–©–ï–ù–ò–ï –ü–û–°–õ–ï –ü–û–î–ê–ß–ò –ó–ê–Ø–í–ö–ò ######################

@bot.chat_join_request_handler()
def new_start(message: telebot.types.ChatJoinRequest):
    btn1 = KeyboardButton(KNOPKA1)
    btn2 = KeyboardButton(KNOPKA2)
    btn3 = KeyboardButton(KNOPKA3)
    btn4 = KeyboardButton(KNOPKA4)
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(btn1).add(btn2).add(btn3).add(btn4)

    bot.send_message(message.from_user.id, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}. –¢–≤–æ—è –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!", parse_mode= 'Markdown', reply_markup = keyboard)
    bot.approve_chat_join_request(message.chat.id, message.from_user.id)

    cursor.execute(f"""SELECT user_id FROM Users WHERE user_id=:user""",  {'user': message.from_user.id})
    username = cursor.fetchone()
    conn.commit()
    
    if username is None:
        cursor.execute('INSERT INTO Users (user_id, username) VALUES (?, ?)', (message.from_user.id, message.from_user.username,))
        conn.commit()



###################### –ë–õ–û–ö –†–ê–°–°–´–õ–ö–ò ######################

@bot.message_handler(commands = ['send'])
def msg_send(message):
    if message.from_user.username == admin:
        btn1 = KeyboardButton("–¢–µ–∫—Å—Ç")
        btn2 = KeyboardButton("–§–æ—Ç–æ")
        btn3 = KeyboardButton("–ì–æ–ª–æ—Å–æ–≤–æ–µ")
        btn5 = KeyboardButton("–û—Ç–º–µ–Ω–∞")
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(btn1).add(btn2).add(btn3).add(btn5)
        bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ –º–µ–¥–∏–∞:', parse_mode= 'Markdown', reply_markup = keyboard)
        bot.register_next_step_handler(message, upload_send)
    else:
        bot.send_message(message.from_user.id, f'–í—ã –Ω–µ –∞–¥–º–∏–Ω')

def upload_send(message):

    if message.text == '–§–æ—Ç–æ':
        bot.send_message(message.from_user.id, '–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ, –º–æ–∂–Ω–æ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º', parse_mode= 'Markdown')
        bot.register_next_step_handler(message, photo)
    elif message.text == "–¢–µ–∫—Å—Ç":
        bot.send_message(message.from_user.id, '–ü—Ä–∏—à–ª–∏—Ç–µ —Ç–µ–∫—Å—Ç', parse_mode= 'Markdown')
        bot.register_next_step_handler(message, text_msg)
    elif message.text == '–ì–æ–ª–æ—Å–æ–≤–æ–µ':
        bot.send_message(message.from_user.id, '–ü—Ä–∏—à–ª–∏—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', parse_mode= 'Markdown')
        bot.register_next_step_handler(message, voice)
    else:
        start(message)

def text_msg(message):
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞"""

    global type, text
    type = 'text'
    text = message.text

    btn1 = KeyboardButton('–î–∞')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(btn1)

    bot.send_message(message.from_user.id, f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º: \n\n–û—Ç—Å—ã–ª–∞–µ–º: {type}", parse_mode= 'Markdown', reply_markup = keyboard)
    bot.register_next_step_handler(message, sender)

def photo(message):
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ"""

    global type, caption
    type = 'photo'
    caption = message.caption

    fileID = message.photo[-1].file_id   
    file_info = bot.get_file(fileID)
    downloaded_file = bot.download_file(file_info.file_path)
    with open("image.jpg", 'wb') as new_file:
        new_file.write(downloaded_file)

    btn1 = KeyboardButton('–î–∞')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(btn1)

    bot.send_message(message.from_user.id, f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º: \n\n–û—Ç—Å—ã–ª–∞–µ–º: {type}", parse_mode= 'Markdown', reply_markup = keyboard)
    bot.register_next_step_handler(message, sender)

def voice(message):
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥—Å"""

    global type
    type = 'voice'

    file_info = bot.get_file(message.voice.file_id)
    file = requests.get('https://api.telegram.org/file/bot{0}/{1}'.format(TOKEN, file_info.file_path))

    with open('voice.ogg','wb') as f:
        f.write(file.content)

    btn1 = KeyboardButton('–î–∞')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(btn1)

    bot.send_message(message.from_user.id, f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º: \n\n–û—Ç—Å—ã–ª–∞–µ–º: {type}", parse_mode= 'Markdown', reply_markup = keyboard)
    bot.register_next_step_handler(message, sender)


def sender(message):
    global text, type, caption, id

    if message.text == '–î–∞':
        cursor.execute(f"""SELECT user_id FROM Users""")
        all_ids = cursor.fetchall()

        count = 0

        try:
            for id in all_ids:
                if id[0]:
                    try:      
                        if type == 'photo':
                            new_file = open('image.jpg', 'rb')
                            bot.send_photo(id[0], photo=new_file, caption=caption, parse_mode='html')
                        elif type == 'voice':
                            f = open('voice.ogg', 'rb')
                            bot.send_voice(id[0], f)
                        elif type == 'text':
                            bot.send_message(id[0], text, parse_mode='html')
                        count += 1
                    except:
                        pass
        except Exception as e:
            print(e)

        bot.send_message(message.from_user.id, f'–†–∞—Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞, –≤—Å–µ–≥–æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π: {count}', parse_mode= 'Markdown')
        start(message)
    else:
        bot.send_message(message.from_user.id, f'–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.')



###################### –û–¢–í–ï–¢–´ –ü–û –ö–ù–û–ü–ö–ê–ú ######################

@bot.message_handler(content_types='text')
def message_reply(message):

    if message.text == KNOPKA1:
        bot.send_message(message.from_user.id, TEXT1, parse_mode= 'Markdown')

    if message.text == KNOPKA2:
        bot.send_message(message.from_user.id, TEXT2, parse_mode= 'Markdown')

    if message.text == KNOPKA3:
        bot.send_message(message.from_user.id, TEXT3, parse_mode= 'Markdown')

    if message.text == KNOPKA4:
        bot.send_message(message.from_user.id, TEXT4, parse_mode= 'Markdown')


def start(message):
    btn1 = KeyboardButton(KNOPKA1)
    btn2 = KeyboardButton(KNOPKA2)
    btn3 = KeyboardButton(KNOPKA3)
    btn4 = KeyboardButton(KNOPKA4)
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(btn1).add(btn2).add(btn3).add(btn4)

    bot.send_message(message.from_user.id, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}. –¢—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.", parse_mode= 'Markdown', reply_markup = keyboard)




while True:
    try:
        bot.infinity_polling(allowed_updates = telebot.util.update_types)
    except:
        continue